{
  "openapi": "3.0.0",
  "info": {
    "title": "Pharmacy Control API",
    "version": "1.0.0",
    "description": "API for managing medication stocks in a hospital or clinic."
  },
  "servers": [
    { "url": "http://localhost:3000/api" }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email", "name", "password"],
        "properties": {
          "email":       { "type": "string", "format": "email" },
          "name":        { "type": "string" },
          "password":    { "type": "string", "minLength": 6 }
        }
      },
      "Medication": {
        "type": "object",
        "required": ["name", "quantity"],
        "properties": {
          "name":           { "type": "string",  "description": "Medication name" },
          "description":    { "type": "string",  "description": "Optional description" },
          "quantity":       { "type": "integer", "description": "Stock quantity (≥0)" },
          "expirationDate": { "type": "string",  "format": "date", "description": "Expiration date (ISO)" }
        }
      },
      "Stock": {
        "type": "object",
        "required": ["medication", "quantity", "takenBy", "patientName", "doctorName"],
        "properties": {
          "medication":     { "type": "string", "description": "Medication ObjectId" },
          "quantity":       { "type": "integer", "description": "Amount withdrawn (≥1)" },
          "takenBy":        { "type": "string", "description": "User who withdrew" },
          "patientName":    { "type": "string", "description": "Patient name" },
          "doctorName":     { "type": "string", "description": "Doctor’s name" },
          "withdrawalDate": { "type": "string", "format": "date-time", "description": "When it was withdrawn" },
          "createdAt":      { "type": "string", "format": "date-time", "description": "Record creation timestamp" }
        }
      },
      "Patient": {
        "type": "object",
        "required": ["name", "birthDate", "medicalRecordNumber"],
        "properties": {
          "name":                { "type": "string", "description": "Patient full name" },
          "birthDate":           { "type": "string", "format": "date", "description": "Date of birth" },
          "medicalRecordNumber": { "type": "string", "description": "Unique MRN" },
          "notes":               { "type": "string", "description": "Optional clinical notes" }
        }
      },
      "Doctor": {
        "type": "object",
        "required": ["name", "department", "specialization", "contactInfo"],
        "properties": {
          "name":           { "type": "string", "description": "Doctor full name" },
          "department":     { "type": "string", "description": "Department name" },
          "specialization": { "type": "string", "description": "Field of expertise" },
          "contactInfo":    { "type": "string", "description": "Email or phone" }
        }
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered" },
          "400": { "description": "Invalid input" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email","password"],
                "properties": {
                  "email":    { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/medications": {
      "get": {
        "summary": "Get all medications",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "List of medications" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "summary": "Create a new medication",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Medication" }
            }
          }
        },
        "responses": {
          "201": { "description": "Medication created" },
          "400": { "description": "Invalid data" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/medications/{id}": {
      "get": {
        "summary": "Get a medication by ID",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Medication details" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "summary": "Update a medication",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Medication" }
            }
          }
        },
        "responses": {
          "200": { "description": "Medication updated" },
          "400": { "description": "Invalid data or ID" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "summary": "Delete a medication",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Medication deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/stocks": {
      "get": {
        "summary": "Get all stock records",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "List of stock withdrawals" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "summary": "Log a new stock withdrawal",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Stock" }
            }
          }
        },
        "responses": {
          "201": { "description": "Stock withdrawal logged" },
          "400": { "description": "Invalid data" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/stocks/{id}": {
      "get": {
        "summary": "Get a stock record by ID",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Stock details" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "summary": "Update a stock record",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Stock" }
            }
          }
        },
        "responses": {
          "200": { "description": "Stock record updated" },
          "400": { "description": "Invalid data or ID" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "summary": "Delete a stock record",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Stock record deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/patients": {
      "get": {
        "summary": "Get all patients",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "List of patients" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "summary": "Create a new patient",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Patient" }
            }
          }
        },
        "responses": {
          "201": { "description": "Patient created" },
          "400": { "description": "Invalid data" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/patients/{id}": {
      "get": {
        "summary": "Get a patient by ID",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Patient details" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "summary": "Update a patient",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Patient" }
            }
          }
        },
        "responses": {
          "200": { "description": "Patient updated" },
          "400": { "description": "Invalid data or ID" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "summary": "Delete a patient",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Patient deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/doctors": {
      "get": {
        "summary": "Get all doctors",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": { "description": "List of doctors" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "summary": "Create a new doctor",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Doctor" }
            }
          }
        },
        "responses": {
          "201": { "description": "Doctor created" },
          "400": { "description": "Invalid data" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/doctors/{id}": {
      "get": {
        "summary": "Get a doctor by ID",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Doctor details" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "summary": "Update a doctor",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Doctor" }
            }
          }
        },
        "responses": {
          "200": { "description": "Doctor updated" },
          "400": { "description": "Invalid data or ID" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "summary": "Delete a doctor",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Doctor deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      }
    }
  }
}